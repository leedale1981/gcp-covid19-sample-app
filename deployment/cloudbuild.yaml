steps:
  # Auth Service Image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', 
      '-t', 'gcr.io/cov19-sample-project/auth-service:latest', 
      '--build-arg', 'AUTH_DB_CONNECTION_STRING=${_AUTHDB_CONN_STRING}',
      '--build-arg', 'IDENTITY_ISSUER=${_IDENTITY_ISSUER}',
      '--build-arg', 'IDENTITY_ORIGIN=${_IDENTITY_ORIGIN}',
      './services/authentication-service'
    ]
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/cov19-sample-project/auth-service:latest']
  # Deploy Kubernetes Auth Service Configuration
  - name: 'gcr.io/cloud-builders/kubectl'
    id: Deploy-Auth-Web-Service
    args:
    - 'apply'
    - '-f'
    - './deployment/kubernetes/auth-service.yaml'
    env:
      - 'CLOUDSDK_COMPUTE_REGION=europe-west2-a'
      - 'CLOUDSDK_COMPUTE_ZONE=europe-west2-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=c19-sample-web-services-cluster'
  # Deploy Kubernetes Auth Database Configuration
  - name: 'gcr.io/cloud-builders/kubectl'
    id: Deploy-Auth-Database-Service
    args:
    - 'apply'
    - '-f'
    - './deployment/kubernetes/auth-database.yaml'
    env:
      - 'CLOUDSDK_COMPUTE_REGION=europe-west2-a'
      - 'CLOUDSDK_COMPUTE_ZONE=europe-west2-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=c19-sample-web-services-cluster'